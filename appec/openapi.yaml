openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080/appec_war_exploded
    description: Generated server url
paths:
  /users/{login}:
    get:
      tags:
        - user-ressource-controller
      operationId: getUser
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
            application/xml:
              schema:
                type: object
    put:
      tags:
        - user-ressource-controller
      operationId: updateUser
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/x-www-form-urlencoded:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
        - user-ressource-controller
      operationId: deleteUser
      parameters:
        - name: login
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /users:
    get:
      tags:
        - user-ressource-controller
      operationId: getAllUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - user-business-controller
      operationId: createUser
      parameters:
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/x-www-form-urlencoded:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /users/logout:
    post:
      tags:
        - user-business-controller
      operationId: logout
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /users/login:
    post:
      tags:
        - user-business-controller
      operationId: login
      parameters:
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/x-www-form-urlencoded:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /users/aliments:
    get:
      tags:
        - user-ressource-controller
      operationId: getAlimentsUser
      parameters:
        - name: login
          in: query
          required: true
          schema:
            type: string
        - name: date
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Posseder'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Posseder'
    post:
      tags:
        - user-ressource-controller
      operationId: addEc
      parameters:
        - name: Content-Type
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
          application/x-www-form-urlencoded:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /aliments:
    get:
      tags:
        - aliment-ressource-controller
      operationId: getAllAliment
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aliment'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Aliment'
  /aliments/{id}:
    get:
      tags:
        - aliment-ressource-controller
      operationId: getAliment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Aliment'
            application/xml:
              schema:
                $ref: '#/components/schemas/Aliment'
components:
  schemas:
    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string
    GrantedAuthority:
      type: object
      properties:
        authority:
          type: string
    User:
      type: object
      properties:
        uid:
          type: integer
          format: int32
        name:
          type: string
        password:
          type: string
        enabled:
          type: boolean
        username:
          type: string
        accountNonExpired:
          type: boolean
        credentialsNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/GrantedAuthority'
    Aliment:
      type: object
      properties:
        alimentId:
          type: integer
          format: int32
        nomLegume:
          type: string
        ec:
          type: number
          format: float
        groupe:
          type: string
        sousGroupe:
          type: string
        alimentid:
          type: integer
          format: int32
          writeOnly: true
    Posseder:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        aliment:
          $ref: '#/components/schemas/Aliment'
        quantity:
          type: number
          format: float
        date:
          type: string
          format: date-time
